-- 문제 1.
SELECT emp.employee_id, emp.first_name, emp.last_name,
       dept.department_name
FROM employees emp, departments dept
WHERE emp.department_id = dept.department_id    -- 조인 조건
ORDER BY dept.department_name ASC, emp.employee_id DESC;

-- ANSI
-- JOIN의 의도를 정확하게 하고, 조인 조건과 SELECTION 조건을 분리하는 효과
SELECT emp.employee_id, emp.first_name, emp.last_name,
       dept.department_name
FROM employees emp  --  중심 테이블 
    JOIN departments dept
        ON emp.department_id = dept.department_id   -- 조인 조건
ORDER BY dept.department_name ASC, emp.employee_id DESC;

-- 문제 2.
-- SIMPLE JOIN
SELECT emp.employee_id 사번, emp.first_name 이름, emp.salary 급여,
       dept.department_name 부서명, 
       j.job_title 현재업무
FROM employees emp, departments dept, jobs j
WHERE emp.department_id = dept.department_id AND emp.job_id = j.job_id
ORDER BY emp.employee_id ASC;

-- ANSI JOIN
SELECT emp.employee_id 사번, emp.first_name 이름, emp.salary 급여,
       dept.department_name 부서명,
       j.job_title 현재업무
FROM employees emp  -- 중심 테이블
    JOIN departments dept
        ON emp.department_id = dept.department_id   -- emp 테이블과 dept 테이블의 JOIN 조건
    JOIN jobs j
        ON emp.job_id = j.job_id
ORDER BY emp.employee_id ASC;

-- 문제 2-1.
SELECT emp.employee_id 사번, emp.first_name 이름, emp.salary 급여,
       dept.department_name 부서명,
       j.job_title 현재업무
FROM employees emp, departments dept, jobs j
WHERE emp.department_id = dept.department_id (+)    -- NULL이 포함된 테이블 쪽에 (+)
AND emp.job_id = j.job_id
ORDER BY emp.employee_id ASC;

-- ANSI JOIN
SELECT emp.employee_id 사번, emp.first_name 이름, emp.salary 급여,
       dept.department_name 부서명,
       j.job_title 현재업무
FROM employees emp  -- 중심 테이블
    LEFT OUTER JOIN departments dept
        ON emp.department_id = dept.department_id   -- emp 테이블과 dept 테이블의 JOIN 조건
    JOIN jobs j
        ON emp.job_id = j.job_id
ORDER BY emp.employee_id ASC;

-- 문제 3.
SELECT loc.location_id 도시아이디, loc.city 도시명,
       dept.department_name 부서명, dept.department_id 부서아이디  
FROM locations loc
    JOIN departments dept
        ON loc.location_id = dept.location_id
ORDER BY loc.location_id ASC;

-- 문제 3-1.
SELECT loc.location_id 도시아이디, loc.city 도시명,
       dept.department_name 부서명, dept.department_id 부서아이디  
FROM locations loc
   LEFT OUTER JOIN departments dept
        ON loc.location_id = dept.location_id
ORDER BY loc.location_id ASC;

-- 문제 4.
SELECT reg.region_name 지역이름, 
       con.country_name 나라이름
FROM regions reg
    JOIN countries con
        ON reg.region_id = con.region_id
ORDER BY reg.region_name ASC, con.country_name DESC;

-- 문제 5.
-- SELF JOIN
SELECT emp.employee_id 사번, emp.first_name 이름, emp.hire_date 채용일, 
       man.first_name 매니저이름, man.hire_date 매니저입사일
FROM employees emp
    JOIN employees man
        ON emp.manager_id = man.manager_id  -- 조인 조건
WHERE emp.hire_date < man.hire_date;    -- SELECTION 조건


-- 문제 6.
SELECT con.country_name 나라명, con.country_id 나라아이디,
       loc.city 도시명, loc.location_id 도시아이디,
       dept.department_name 부서명, dept.department_id 부서아이디
FROM locations loc
    JOIN countries con
        ON loc.country_id = con.country_id
    JOIN departments dept
        ON loc.location_id = dept.location_id
ORDER BY con.country_name ASC;

-- 문제 7.
SELECT emp.employee_id 사번, emp.first_name || ' ' || last_name 이름, 
       jh.job_id 업무아이디, jh.start_date 시작일, jh.end_date 종료일
FROM employees emp
    JOIN job_history jh
        ON emp.employee_id = jh.employee_id   -- 조인 조건
WHERE jh.job_id = 'AC_ACCOUNT';

-- 문제 8.
SELECT dept.department_id 부서번호, dept.department_name 부서이름,
       man.first_name 매니저이름,
       loc.city 위치한도시,
       con.country_name 나라이름,
       reg.region_name 지역이름
FROM departments dept
    JOIN employees man ON dept.manager_id = man.employee_id
    JOIN locations loc ON dept.location_id = loc.location_id
    JOIN countries con ON loc.country_id = con.country_id
    JOIN regions reg ON con.region_id = reg.region_id
ORDER BY dept.department_id;

-- 문제 9.
SELECT emp.employee_id 사번, emp.first_name 이름,
       dept.department_name 부서명,
       man.first_name 매니저이름
FROM employees emp
    LEFT OUTER JOIN departments dept 
        ON emp.department_id = dept.department_id
    JOIN employees man 
        ON emp.manager_id = man.employee_id;